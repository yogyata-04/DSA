#include<bits/stdc++.h>
using namespace std;

void solve(int start,int end,vector<int>z,vector<int>km,vector<int>equal,int k,int n,int &count,vector<vector<int>> &vis,vector<pair<int,int>> &track){
    if(start<0 || end>=n) return;
    if(vis[start][end]!=0) return;
    vis[start][end]=1;
    if(km[start]+km[end]-(z[start]+z[end])==equal[start]+equal[end] || km[start]+km[end]-(z[start]+z[end])==-equal[start]-equal[end]){
        ++count;
        track.push_back({start,end});
    }
    if(start-1>=0 && end+1<n) solve(start-1,end+1,z,km,equal,k,n,count,vis,track);
    if(start-2>=0 && end<n) solve(start-2,end,z,km,equal,k,n,count,vis,track);
    if(start>=0 && end+2<n) solve(start,end+2,z,km,equal,k,n,count,vis,track);
} 
 
int main(){
    vector<int> e={1,2,3,2,2};
    int k=2;
    k=k-1;
    int n=e.size();
    vector<vector<int>> vis(n,vector<int>(n,0));
    vector<int> km(n,0);
    vector<int> zyada(n,0);
    vector<int> equal(n,0);
    vector<int> e_ind;
    e_ind.push_back(k);
    for(int i=k-1;i>=0;i--){
        if(e[i]>e[k]){
            km[i]=km[i+1];
            zyada[i]=zyada[i+1]+1;
            equal[i]=equal[i+1];
        }
        else if(e[i]<e[k]){
            km[i]=km[i+1]+1;
            zyada[i]=zyada[i+1];
            equal[i]=equal[i+1];
        }
        else{
            km[i]=km[i+1];
            zyada[i]=zyada[i+1];
            equal[i]=equal[i+1]+1;
            e_ind.push_back(i);
        }
    }
    for(int i=k+1;i<n;i++){
        if(e[i]>e[k]){
            km[i]=km[i-1];
            zyada[i]=zyada[i-1]+1;
            equal[i]=equal[i-1];
        }
        else if(e[i]<e[k]){
            km[i]=km[i-1]+1;
            zyada[i]=zyada[i-1];
            equal[i]=equal[i-1];
        }
        else{
            km[i]=km[i-1];
            zyada[i]=zyada[i-1];
            equal[i]=equal[i-1]+1;
            e_ind.push_back(i);
        }
    }
    /*
    for(auto it:km){
        cout<<it<<" ";
    }
    for(auto it:zyada){
        cout<<it<<" ";
    }*/
    int count=0;
    vector<pair<int,int>> t;
    for(auto it:e_ind){
        cout<<it<<" "; 
    }
    cout<<endl;
    for(auto it:e_ind){
        solve(it,it,zyada,km,equal,k,n,count,vis,t);
    }
    for(auto it:t){
        cout<<it.first<<" "<<it.second<<endl;
    }
    cout<<count+e_ind.size()-1<<endl;
    return 0;
}
